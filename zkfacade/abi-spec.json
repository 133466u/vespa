{
  "com.yahoo.vespa.curator.CompletionTimeoutException": {
    "superClass": "java.lang.RuntimeException",
    "interfaces": [],
    "attributes": [
      "public"
    ],
    "methods": [
      "public void <init>(java.lang.String)"
    ],
    "fields": []
  },
  "com.yahoo.vespa.curator.Curator$CompletionWaiter": {
    "superClass": "java.lang.Object",
    "interfaces": [],
    "attributes": [
      "public",
      "interface",
      "abstract"
    ],
    "methods": [
      "public abstract void awaitCompletion(java.time.Duration)",
      "public abstract void notifyCompletion()"
    ],
    "fields": []
  },
  "com.yahoo.vespa.curator.Curator$DirectoryCache": {
    "superClass": "java.lang.Object",
    "interfaces": [],
    "attributes": [
      "public",
      "interface",
      "abstract"
    ],
    "methods": [
      "public abstract void start()",
      "public abstract void addListener(org.apache.curator.framework.recipes.cache.PathChildrenCacheListener)",
      "public abstract java.util.List getCurrentData()",
      "public abstract org.apache.curator.framework.recipes.cache.ChildData getCurrentData(com.yahoo.path.Path)",
      "public abstract void close()"
    ],
    "fields": []
  },
  "com.yahoo.vespa.curator.Curator$FileCache": {
    "superClass": "java.lang.Object",
    "interfaces": [],
    "attributes": [
      "public",
      "interface",
      "abstract"
    ],
    "methods": [
      "public abstract void start()",
      "public abstract void addListener(org.apache.curator.framework.recipes.cache.NodeCacheListener)",
      "public abstract org.apache.curator.framework.recipes.cache.ChildData getCurrentData()",
      "public abstract void close()"
    ],
    "fields": []
  },
  "com.yahoo.vespa.curator.Curator": {
    "superClass": "java.lang.Object",
    "interfaces": [
      "java.lang.AutoCloseable"
    ],
    "attributes": [
      "public"
    ],
    "methods": [
      "public static com.yahoo.vespa.curator.Curator create(java.lang.String)",
      "public static com.yahoo.vespa.curator.Curator create(java.lang.String, java.util.Optional)",
      "public void <init>(com.yahoo.cloud.config.ConfigserverConfig, com.yahoo.vespa.zookeeper.VespaZooKeeperServer)",
      "protected void <init>(java.lang.String, java.lang.String, java.util.function.Function)",
      "public java.lang.String connectionSpec()",
      "public org.apache.curator.framework.recipes.atomic.DistributedAtomicLong createAtomicCounter(java.lang.String)",
      "public org.apache.curator.framework.recipes.locks.InterProcessLock createMutex(java.lang.String)",
      "public com.yahoo.vespa.curator.Curator$CompletionWaiter getCompletionWaiter(com.yahoo.path.Path, int, java.lang.String)",
      "public com.yahoo.vespa.curator.Curator$CompletionWaiter createCompletionWaiter(com.yahoo.path.Path, java.lang.String, int, java.lang.String)",
      "public com.yahoo.vespa.curator.Curator$DirectoryCache createDirectoryCache(java.lang.String, boolean, boolean, java.util.concurrent.ExecutorService)",
      "public com.yahoo.vespa.curator.Curator$FileCache createFileCache(java.lang.String, boolean)",
      "public boolean exists(com.yahoo.path.Path)",
      "public void set(com.yahoo.path.Path, byte[])",
      "public boolean create(com.yahoo.path.Path)",
      "public varargs void createAtomically(com.yahoo.path.Path[])",
      "public void delete(com.yahoo.path.Path)",
      "public java.util.List getChildren(com.yahoo.path.Path)",
      "public java.util.Optional getData(com.yahoo.path.Path)",
      "public java.util.Optional getStat(com.yahoo.path.Path)",
      "public com.yahoo.vespa.curator.Lock lock(com.yahoo.path.Path, java.time.Duration)",
      "public org.apache.curator.framework.CuratorFramework framework()",
      "public void close()",
      "public java.lang.String zooKeeperEnsembleConnectionSpec()",
      "public int zooKeeperEnsembleCount()"
    ],
    "fields": [
      "protected final org.apache.curator.RetryPolicy retryPolicy"
    ]
  },
  "com.yahoo.vespa.curator.Lock": {
    "superClass": "java.lang.Object",
    "interfaces": [
      "com.yahoo.transaction.Mutex"
    ],
    "attributes": [
      "public"
    ],
    "methods": [
      "public void <init>(java.lang.String, com.yahoo.vespa.curator.Curator)",
      "public void acquire(java.time.Duration)",
      "public void close()"
    ],
    "fields": []
  },
  "com.yahoo.vespa.curator.LockInfo$LockState": {
    "superClass": "java.lang.Enum",
    "interfaces": [],
    "attributes": [
      "public",
      "final",
      "enum"
    ],
    "methods": [
      "public static com.yahoo.vespa.curator.LockInfo$LockState[] values()",
      "public static com.yahoo.vespa.curator.LockInfo$LockState valueOf(java.lang.String)",
      "public boolean isTerminal()"
    ],
    "fields": [
      "public static final enum com.yahoo.vespa.curator.LockInfo$LockState ACQUIRING",
      "public static final enum com.yahoo.vespa.curator.LockInfo$LockState TIMED_OUT",
      "public static final enum com.yahoo.vespa.curator.LockInfo$LockState ACQUIRED",
      "public static final enum com.yahoo.vespa.curator.LockInfo$LockState FAILED_TO_REENTER",
      "public static final enum com.yahoo.vespa.curator.LockInfo$LockState RELEASED"
    ]
  },
  "com.yahoo.vespa.curator.LockInfo": {
    "superClass": "java.lang.Object",
    "interfaces": [],
    "attributes": [
      "public"
    ],
    "methods": [
      "public static com.yahoo.vespa.curator.LockInfo invokingAcquire(int, java.time.Duration)",
      "public int getThreadHoldCountOnAcquire()",
      "public java.time.Instant getTimeAcquiredWasInvoked()",
      "public java.time.Duration getAcquireTimeout()",
      "public com.yahoo.vespa.curator.LockInfo$LockState getLockState()",
      "public java.util.Optional getTimeLockWasAcquired()",
      "public java.util.Optional getTimeTerminalStateWasReached()"
    ],
    "fields": []
  },
  "com.yahoo.vespa.curator.ThreadLockInfo": {
    "superClass": "java.lang.Object",
    "interfaces": [],
    "attributes": [
      "public"
    ],
    "methods": [
      "public static int invokeAcquireCount()",
      "public static int inCriticalRegionCount()",
      "public static int acquireTimedOutCount()",
      "public static int lockAcquiredCount()",
      "public static int locksReleasedCount()",
      "public static int noLocksErrorCount()",
      "public static int failedToAcquireReentrantLockCount()",
      "public static int timeoutOnReentrancyErrorCount()",
      "public static java.util.List getThreadLockInfos()",
      "public java.lang.String getThreadName()",
      "public java.lang.String getLockPath()",
      "public java.util.List getLockInfos()"
    ],
    "fields": []
  }
}